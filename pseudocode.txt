структура Бабушкина 
начало
    целое знаменатель
    целое числитель
    целое число_знаков_после_запятой
конец


начало
    
    открыть_файл для чтения
    если файл не существует то
        вывести("Не удалось открыть файл.")
        выйти из программы
    конец если
    
    считать размер_массива из файла и записать в переменную размер
    вывести "Размер массива: ", размер
    
    создать пустой массив исходный_массив размером размер
    считать массив из файла
    
    закрыть файл
    
    структура Бабушкина bnums := получить_число_Бабушкина(исходный_массив, размер)
    
    создать пустой массив старый_массив размером размер
    копировать массив исходный_массив в старый_массив размером размер
    
    сортировать_с_помощью_числа_Бабушкина(исходный_массив, размер, bnums)
    
    вывести_массивы_для_сравнения(старый_массив, исходный_массив, размер)
    
конец


начало получить_число_Бабушкина(входной_массив, размер)
    создать массив массив_Бабушкина размером размер
    создать переменную дробь_Бабушкина и установить её в 0
    создать переменную число_Бабушкина и установить её в 0
    создать структуру Бабушкина bnums и установить поля bnums.знаменатель, bnums.числитель и bnums.число_знаков_после_запятой в 0
    
    создать массив отсортированный_массив размером размер
    
    скопировать массив входной_массив в отсортированный_массив
    
    сортировать_пузырьком отсортированный_массив размером размер
    
    для каждого элемента i от 0 до размер-1 делать
        для каждого элемента j от 0 до размер-1 делать
            если отсортированный_массив[j] == входной_массив[i] то
                массив_Бабушкина[i] := j
                // комментарий: невозможное — значит не встречающееся в массив_Бабушкина
                отсортированный_массив[j] := невозможное_значение
                прервать цикл
            конец если
        конец цикла
    конец цикла
    
    вывести_массив массив_Бабушкина
    
    для каждого элемента i от размер-1 до 0 делать
        число_Бабушкина := массив_Бабушкина[i] * размер в степени размер-1-i
        если число_Бабушкина переполнен то
            вывести "Ошибка переполнения! Число Бабушкина слишком большое"
            выйти из программы
        конец если
    конец цикла
    
    вывести число_Бабушкина
    дробь_Бабушкина := число_Бабушкина
    
    пока дробь_Бабушкина > 1 делать
        дробь_Бабушкина := дробь_Бабушкина / 10
        bnums.число_знаков_после_запятой = bnums.число_знаков_после_запятой + 1
    конец цикла
    
    bnums.знаменатель := 10 в степени bnums.число_знаков_после_запятой
    bnums.числитель := число_Бабушкина
    
    если bnums.знаменатель переполнен то
        вывести "Ошибка переполнения! Знаменатель дроби Бабушкина слишком большой"
        выйти из программы
    конец если
    
    упростить_дробь(адрес bnums.числитель, адрес bnums.знаменатель)
    вывести "Дробь Бабушкина: ", bnums.числитель, "/", bnums.знаменатель
    вернуть bnums
конец получить_число_Бабушкина()


начало упростить_дробь(адрес числитель, адрес знаменатель)
    создать переменную делитель и установить её в наибольший_общий_делитель(числитель, знаменатель)
    разделить numerчисло1tor на делитель и записать результат по адресу числитель
    разделить denominчисло1tor на делитель и записать результат по адресу знаменатель
конец упростить_дробь()


начало наибольший_общий_делитель(число1, число2)
    создать переменную буфер
    
    пока число2 <> 0 делать
        буфер := число2
        число2 := остаток от деления число1 на число2
        число1 := буфер
    конец цикла
    
    вернуть число1
конец


начало сортировать_с_помощью_числа_Бабушкина(входной_массив, размер, bnums)
    создать пустой массив выходной_массив размером размер
    создать массив массив_Бабушкина размером размер
    создать переменную буфер и установить её в 10 в степени bnums.число_знаков_после_запятой * bnums.числитель / bnums.знаменатель
    создать переменную число_Бабушкина и установить её в значение буфер
    создать переменную i и установить её в 0
    
    массив_Бабушкина[0] := 0
    
    пока число_Бабушкина > 0 делать
        массив_Бабушкина[размер - i - 1] := остаток от деления число_Бабушкина на размер
        число_Бабушкина := число_Бабушкина / размер
        i = i + 1
    конец цикла
    
    вывести "Массив Бабушкина (сортировка):"
    вывести_массив массив_Бабушкина размером размер
    
    для каждого элемента i от 0 до размер-1 делать
        выходной_массив[массив_Бабушкина[i]] := входной_массив[i]
    конец цикла
    
    скопировать массив выходной_массив в входной_массив размером размер
конец
